{"version":3,"sources":["commonjs-require.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"vendor.js","sourcesContent":["(function() {\n\n  'use strict';\n\n  var globals = typeof window === 'undefined' ? global : window;\n  if (typeof globals.require === 'function') return;\n\n  var _definedModules = {};\n  var _aliases = {};\n\n  var Module = {\n    _load: function(request, parent) {\n      var name = Module._resolveFilename(request, parent);\n      var definition = _definedModules[name];\n      if (!definition) throw new Error('Cannot find module \"' + name + '\" from '+ '\"' + parent + '\"');\n\n      if (Module._cache[name]) return Module._cache[name].exports;\n\n      var localRequire = createLocalRequire(name);\n      var module = {id: name, exports: {}};\n      Module._cache[name] = module;\n      definition.call(module.exports, module.exports, localRequire, module);\n      return module.exports;\n    },\n    _cache: {},\n    // TODO: Implement this to behave more like the Node environment\n    _resolveFilename: function(request, parent) {\n      var path = expand(dirname(parent), request);\n      if (_definedModules.hasOwnProperty(path)) return path;\n      path = expand(path, './index');\n      if (_definedModules.hasOwnProperty(path)) return path;\n      return request;\n    }\n  };\n\n  var require = function(name, loaderPath) {\n    return Module._load(name, loaderPath);\n  };\n\n\n  var expand = (function() {\n    var reg = /^\\.\\.?(\\/|$)/;\n    return function(root, name) {\n      var results = [], parts, part;\n      parts = (reg.test(name) ? root + '/' + name : name).split('/');\n      for (var i = 0, length = parts.length; i < length; i++) {\n        part = parts[i];\n        if (part === '..') {\n          results.pop();\n        } else if (part !== '.' && part !== '') {\n          results.push(part);\n        }\n      }\n      return results.join('/');\n    };\n  })();\n\n  var createLocalRequire = function(parent) {\n    return function(name) {\n      return globals.require(name, parent);\n    };\n  };\n\n  var dirname = function(path) {\n    if (!path) return '';\n    return path.split('/').slice(0, -1).join('/');\n  };\n\n  require.register = require.define = function(bundle, fn) {\n    if (typeof bundle === 'object') {\n      for (var key in bundle) {\n        if (bundle.hasOwnProperty(key)) {\n          _definedModules[key] = bundle[key];\n        }\n      }\n    } else {\n      _definedModules[bundle] = fn;\n    }\n  };\n\n  require.list = function() {\n    var result = [];\n    for (var item in _definedModules) {\n      if (_definedModules.hasOwnProperty(item)) {\n        result.push(item);\n      }\n    }\n    return result;\n  };\n\n  globals.require = require;\n\n  require.define('module', function(exports, require, module) {\n    module.exports = Module;\n  });\n\n})();"],"sourceRoot":"/source/"}